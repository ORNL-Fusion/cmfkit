#!/bin/bash


_preflight() {

  CMFKIT_OUTSET_DIR="$( pwd -P )"
  CMFKIT_SOURCE_DIR="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
}


_dugout_init() {

  local readonly outsetdir="$( pwd -P )"
  local readonly cmfkitdir="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
  local rc

  cd $(mktemp -d) || return 1

  #mkdir -p ./cmfkit_coalesce

  #cp -r ${outsetdir}/* .
  cp -r ${outsetdir}/.cmfkit .

  mkdir -p ./.cmfkit/platform
  mkdir -p ./.cmfkit/scenario
  mkdir -p ./.cmfkit/testbank

  cp -r ${cmfkitdir}/platform/* ./.cmfkit/platform
  cp -r ${cmfkitdir}/scenario/* ./.cmfkit/scenario
  cp -r ${cmfkitdir}/testbank/* ./.cmfkit/testbank

  echo; echo "${PWD}"

  CMFKIT_DUGOUT_DIR="${PWD}/.cmfkit"

  cd - >/dev/null

  #[[ ${OLDPWD} != ${outsetdir} ]] && rm -rf ${OLDPWD}
}




__launch_one() {

  local readonly 
}



__launch_two() {

  shift; local readonly base_image="$1"

  echo "launch_container base_image: ${base_image}"
}


CMFKIT_SOURCE_DIR=''
CMFKIT_OUTSET_DIR=''
CMFKIT_DUGOUT_DIR=''

# CMFKIT_READYBAKE_IMAGE_SEED
# CMFKIT_PLATFORM [ autoselect nersc github_vm readybake ]
# CMFKIT_SCENARIO [ all default none zilch ]

# CMFKIT_INTERACTIVE [ yes no ]

_preflight

. $CMFKIT_SOURCE_DIR/mod_common
. $CMFKIT_SOURCE_DIR/mod_deflist
. $CMFKIT_SOURCE_DIR/mod_platform
. $CMFKIT_SOURCE_DIR/mod_readybake

_dugout_init

[[ -v CMFKIT_PLATFORM              ]] || true
[[ -v CMFKIT_SCENARIO              ]] || true
[[ -v CMFKIT_READYBAKE_IMAGE_SEED  ]] || true

CMFKIT_PLATFORM="${CMFKIT_PLATFORM:-unknown}"
CMFKIT_SCENARIO="${CMFKIT_SCENARIO:-default}"



[[ -n "$CMFKIT_READYBAKE_IMAGE_SEED" ]] \
  && _readybake_isolate_buildpath "$CMFKIT_READYBAKE_IMAGE_SEED"

[[ $CMFKIT_PLATFORM =~ readybake ]] \
  && [[ -z "$CMFKIT_READYBAKE_BUILD_PATH" ]] \
  && _error_fatal "unable to isolate Dockerfile for $CMFKIT_READYBAKE_SEED_IMAGE"

[[ $CMFKIT_PLATFORM =~ readybake ]] && _readybake_yield_image
[[ $CMFKIT_PLATFORM =~ readybake ]]  \
  && [[ -z "$CMFKIT_READYBAKE_IMAGE"  ]] \
  && _error_fatal "unable to yield image: ${CMFKIT_READYBAKE_BUILD_PATH##*/}"

[[ $CMFKIT_PLATFORM =~ unknown ]] && _platform_autoselect
[[ $CMFKIT_PLATFORM =~ unknown ]] && _error_fatal "unable to select platform"


# establish list of variables defined in a pre-scope context
_deflist_denote_outset


[[ $CMFKIT_PLATFORM =~ readybake ]] \
  && _debug "placeholder, readybake execute build"
  # replicate current env inside docker container and execute

[[ ! $CMFKIT_PLATFORM =~ readybake ]] \
  && . $CMFKIT_DUGOUT_DIR/platform/$CMFKIT_PLATFORM/setup

# commit outstanding CMake def variables to the final roster
_deflist_accrue_vars


_debug "checkpoint 12"

echo 
echo ${CMFKIT_VARLIST_OUTSET}             | tr ' ' '\n' | grep "^CMAKE_"
echo ${CMFKIT_VARLIST_CMAKE_DEFINITIONS}  | tr ' ' '\n' | grep "^CMAKE_"
echo
_debug_dumpvars | grep "^CMFKIT_"
echo
_debug_dumpvars | grep "^CMAKE_"

_debug "checkpoint 13"

# commit outstanding CMake def variables to the final roster
#_deflist_accrue_vars


echo
#ls -la $CMFKIT_DUGOUT_DIR
echo
#tree $CMFKIT_DUGOUT_DIR
echo


rm -rf $CMFKIT_DUGOUT_DIR


#[[ -z "$1" ]] && "__launch"
#[[ -z "$1" ]] || "__launch_$1" "$@"

#_readybake_yield_image
#_readybake_buildenv

